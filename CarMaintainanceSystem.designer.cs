#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CarMaintainanceSystem
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CyrusDB")]
	public partial class CarMaintainanceSystemDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InserttblCustomer(tblCustomer instance);
    partial void UpdatetblCustomer(tblCustomer instance);
    partial void DeletetblCustomer(tblCustomer instance);
    partial void InserttblJobDetail(tblJobDetail instance);
    partial void UpdatetblJobDetail(tblJobDetail instance);
    partial void DeletetblJobDetail(tblJobDetail instance);
    partial void InserttblWorker(tblWorker instance);
    partial void UpdatetblWorker(tblWorker instance);
    partial void DeletetblWorker(tblWorker instance);
    #endregion
		
		public CarMaintainanceSystemDataContext() : 
				base(global::CarMaintainanceSystem.Properties.Settings.Default.CyrusDBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public CarMaintainanceSystemDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CarMaintainanceSystemDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CarMaintainanceSystemDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CarMaintainanceSystemDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tblCustomer> tblCustomers
		{
			get
			{
				return this.GetTable<tblCustomer>();
			}
		}
		
		public System.Data.Linq.Table<tblJobDetail> tblJobDetails
		{
			get
			{
				return this.GetTable<tblJobDetail>();
			}
		}
		
		public System.Data.Linq.Table<tblWorker> tblWorkers
		{
			get
			{
				return this.GetTable<tblWorker>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblCustomer")]
	public partial class tblCustomer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CarNo;
		
		private string _Name;
		
		private string _Address;
		
		private string _Make;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCarNoChanging(string value);
    partial void OnCarNoChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnMakeChanging(string value);
    partial void OnMakeChanged();
    #endregion
		
		public tblCustomer()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarNo", DbType="NVarChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CarNo
		{
			get
			{
				return this._CarNo;
			}
			set
			{
				if ((this._CarNo != value))
				{
					this.OnCarNoChanging(value);
					this.SendPropertyChanging();
					this._CarNo = value;
					this.SendPropertyChanged("CarNo");
					this.OnCarNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(255)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Make", DbType="NVarChar(50)")]
		public string Make
		{
			get
			{
				return this._Make;
			}
			set
			{
				if ((this._Make != value))
				{
					this.OnMakeChanging(value);
					this.SendPropertyChanging();
					this._Make = value;
					this.SendPropertyChanged("Make");
					this.OnMakeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblJobDetails")]
	public partial class tblJobDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CarNo;
		
		private System.DateTime _JobDate;
		
		private int _WorkerId;
		
		private System.Nullable<int> _KMs;
		
		private System.Nullable<int> _Tuning;
		
		private System.Nullable<int> _Alignment;
		
		private System.Nullable<int> _Balancing;
		
		private System.Nullable<int> _Tires;
		
		private System.Nullable<int> _Weights;
		
		private System.Nullable<int> _OilChanged;
		
		private System.Nullable<int> _OilQty;
		
		private System.Nullable<int> _OilFilter;
		
		private System.Nullable<int> _GearOil;
		
		private System.Nullable<int> _GearOilQty;
		
		private System.Nullable<int> _Point;
		
		private System.Nullable<int> _Condenser;
		
		private System.Nullable<int> _Plug;
		
		private System.Nullable<int> _PlugQty;
		
		private System.Nullable<int> _FuelFilter;
		
		private System.Nullable<int> _AirFilter;
		
		private System.Nullable<int> _Remarks;
		
		private EntityRef<tblWorker> _tblWorker;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCarNoChanging(string value);
    partial void OnCarNoChanged();
    partial void OnJobDateChanging(System.DateTime value);
    partial void OnJobDateChanged();
    partial void OnWorkerIdChanging(int value);
    partial void OnWorkerIdChanged();
    partial void OnKMsChanging(System.Nullable<int> value);
    partial void OnKMsChanged();
    partial void OnTuningChanging(System.Nullable<int> value);
    partial void OnTuningChanged();
    partial void OnAlignmentChanging(System.Nullable<int> value);
    partial void OnAlignmentChanged();
    partial void OnBalancingChanging(System.Nullable<int> value);
    partial void OnBalancingChanged();
    partial void OnTiresChanging(System.Nullable<int> value);
    partial void OnTiresChanged();
    partial void OnWeightsChanging(System.Nullable<int> value);
    partial void OnWeightsChanged();
    partial void OnOilChangedChanging(System.Nullable<int> value);
    partial void OnOilChangedChanged();
    partial void OnOilQtyChanging(System.Nullable<int> value);
    partial void OnOilQtyChanged();
    partial void OnOilFilterChanging(System.Nullable<int> value);
    partial void OnOilFilterChanged();
    partial void OnGearOilChanging(System.Nullable<int> value);
    partial void OnGearOilChanged();
    partial void OnGearOilQtyChanging(System.Nullable<int> value);
    partial void OnGearOilQtyChanged();
    partial void OnPointChanging(System.Nullable<int> value);
    partial void OnPointChanged();
    partial void OnCondenserChanging(System.Nullable<int> value);
    partial void OnCondenserChanged();
    partial void OnPlugChanging(System.Nullable<int> value);
    partial void OnPlugChanged();
    partial void OnPlugQtyChanging(System.Nullable<int> value);
    partial void OnPlugQtyChanged();
    partial void OnFuelFilterChanging(System.Nullable<int> value);
    partial void OnFuelFilterChanged();
    partial void OnAirFilterChanging(System.Nullable<int> value);
    partial void OnAirFilterChanged();
    partial void OnRemarksChanging(System.Nullable<int> value);
    partial void OnRemarksChanged();
    #endregion
		
		public tblJobDetail()
		{
			this._tblWorker = default(EntityRef<tblWorker>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarNo", DbType="NVarChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CarNo
		{
			get
			{
				return this._CarNo;
			}
			set
			{
				if ((this._CarNo != value))
				{
					this.OnCarNoChanging(value);
					this.SendPropertyChanging();
					this._CarNo = value;
					this.SendPropertyChanged("CarNo");
					this.OnCarNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobDate", DbType="DateTime2 NOT NULL")]
		public System.DateTime JobDate
		{
			get
			{
				return this._JobDate;
			}
			set
			{
				if ((this._JobDate != value))
				{
					this.OnJobDateChanging(value);
					this.SendPropertyChanging();
					this._JobDate = value;
					this.SendPropertyChanged("JobDate");
					this.OnJobDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkerId", DbType="Int NOT NULL")]
		public int WorkerId
		{
			get
			{
				return this._WorkerId;
			}
			set
			{
				if ((this._WorkerId != value))
				{
					if (this._tblWorker.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkerIdChanging(value);
					this.SendPropertyChanging();
					this._WorkerId = value;
					this.SendPropertyChanged("WorkerId");
					this.OnWorkerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KMs", DbType="Int")]
		public System.Nullable<int> KMs
		{
			get
			{
				return this._KMs;
			}
			set
			{
				if ((this._KMs != value))
				{
					this.OnKMsChanging(value);
					this.SendPropertyChanging();
					this._KMs = value;
					this.SendPropertyChanged("KMs");
					this.OnKMsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tuning", DbType="Int")]
		public System.Nullable<int> Tuning
		{
			get
			{
				return this._Tuning;
			}
			set
			{
				if ((this._Tuning != value))
				{
					this.OnTuningChanging(value);
					this.SendPropertyChanging();
					this._Tuning = value;
					this.SendPropertyChanged("Tuning");
					this.OnTuningChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Alignment", DbType="Int")]
		public System.Nullable<int> Alignment
		{
			get
			{
				return this._Alignment;
			}
			set
			{
				if ((this._Alignment != value))
				{
					this.OnAlignmentChanging(value);
					this.SendPropertyChanging();
					this._Alignment = value;
					this.SendPropertyChanged("Alignment");
					this.OnAlignmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Balancing", DbType="Int")]
		public System.Nullable<int> Balancing
		{
			get
			{
				return this._Balancing;
			}
			set
			{
				if ((this._Balancing != value))
				{
					this.OnBalancingChanging(value);
					this.SendPropertyChanging();
					this._Balancing = value;
					this.SendPropertyChanged("Balancing");
					this.OnBalancingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tires", DbType="Int")]
		public System.Nullable<int> Tires
		{
			get
			{
				return this._Tires;
			}
			set
			{
				if ((this._Tires != value))
				{
					this.OnTiresChanging(value);
					this.SendPropertyChanging();
					this._Tires = value;
					this.SendPropertyChanged("Tires");
					this.OnTiresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weights", DbType="Int")]
		public System.Nullable<int> Weights
		{
			get
			{
				return this._Weights;
			}
			set
			{
				if ((this._Weights != value))
				{
					this.OnWeightsChanging(value);
					this.SendPropertyChanging();
					this._Weights = value;
					this.SendPropertyChanged("Weights");
					this.OnWeightsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OilChanged", DbType="Int")]
		public System.Nullable<int> OilChanged
		{
			get
			{
				return this._OilChanged;
			}
			set
			{
				if ((this._OilChanged != value))
				{
					this.OnOilChangedChanging(value);
					this.SendPropertyChanging();
					this._OilChanged = value;
					this.SendPropertyChanged("OilChanged");
					this.OnOilChangedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OilQty", DbType="Int")]
		public System.Nullable<int> OilQty
		{
			get
			{
				return this._OilQty;
			}
			set
			{
				if ((this._OilQty != value))
				{
					this.OnOilQtyChanging(value);
					this.SendPropertyChanging();
					this._OilQty = value;
					this.SendPropertyChanged("OilQty");
					this.OnOilQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OilFilter", DbType="Int")]
		public System.Nullable<int> OilFilter
		{
			get
			{
				return this._OilFilter;
			}
			set
			{
				if ((this._OilFilter != value))
				{
					this.OnOilFilterChanging(value);
					this.SendPropertyChanging();
					this._OilFilter = value;
					this.SendPropertyChanged("OilFilter");
					this.OnOilFilterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GearOil", DbType="Int")]
		public System.Nullable<int> GearOil
		{
			get
			{
				return this._GearOil;
			}
			set
			{
				if ((this._GearOil != value))
				{
					this.OnGearOilChanging(value);
					this.SendPropertyChanging();
					this._GearOil = value;
					this.SendPropertyChanged("GearOil");
					this.OnGearOilChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GearOilQty", DbType="Int")]
		public System.Nullable<int> GearOilQty
		{
			get
			{
				return this._GearOilQty;
			}
			set
			{
				if ((this._GearOilQty != value))
				{
					this.OnGearOilQtyChanging(value);
					this.SendPropertyChanging();
					this._GearOilQty = value;
					this.SendPropertyChanged("GearOilQty");
					this.OnGearOilQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Point", DbType="Int")]
		public System.Nullable<int> Point
		{
			get
			{
				return this._Point;
			}
			set
			{
				if ((this._Point != value))
				{
					this.OnPointChanging(value);
					this.SendPropertyChanging();
					this._Point = value;
					this.SendPropertyChanged("Point");
					this.OnPointChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Condenser", DbType="Int")]
		public System.Nullable<int> Condenser
		{
			get
			{
				return this._Condenser;
			}
			set
			{
				if ((this._Condenser != value))
				{
					this.OnCondenserChanging(value);
					this.SendPropertyChanging();
					this._Condenser = value;
					this.SendPropertyChanged("Condenser");
					this.OnCondenserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Plug", DbType="Int")]
		public System.Nullable<int> Plug
		{
			get
			{
				return this._Plug;
			}
			set
			{
				if ((this._Plug != value))
				{
					this.OnPlugChanging(value);
					this.SendPropertyChanging();
					this._Plug = value;
					this.SendPropertyChanged("Plug");
					this.OnPlugChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlugQty", DbType="Int")]
		public System.Nullable<int> PlugQty
		{
			get
			{
				return this._PlugQty;
			}
			set
			{
				if ((this._PlugQty != value))
				{
					this.OnPlugQtyChanging(value);
					this.SendPropertyChanging();
					this._PlugQty = value;
					this.SendPropertyChanged("PlugQty");
					this.OnPlugQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FuelFilter", DbType="Int")]
		public System.Nullable<int> FuelFilter
		{
			get
			{
				return this._FuelFilter;
			}
			set
			{
				if ((this._FuelFilter != value))
				{
					this.OnFuelFilterChanging(value);
					this.SendPropertyChanging();
					this._FuelFilter = value;
					this.SendPropertyChanged("FuelFilter");
					this.OnFuelFilterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AirFilter", DbType="Int")]
		public System.Nullable<int> AirFilter
		{
			get
			{
				return this._AirFilter;
			}
			set
			{
				if ((this._AirFilter != value))
				{
					this.OnAirFilterChanging(value);
					this.SendPropertyChanging();
					this._AirFilter = value;
					this.SendPropertyChanged("AirFilter");
					this.OnAirFilterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="Int")]
		public System.Nullable<int> Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblWorker_tblJobDetail", Storage="_tblWorker", ThisKey="WorkerId", OtherKey="WorkerId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public tblWorker tblWorker
		{
			get
			{
				return this._tblWorker.Entity;
			}
			set
			{
				tblWorker previousValue = this._tblWorker.Entity;
				if (((previousValue != value) 
							|| (this._tblWorker.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblWorker.Entity = null;
						previousValue.tblJobDetails.Remove(this);
					}
					this._tblWorker.Entity = value;
					if ((value != null))
					{
						value.tblJobDetails.Add(this);
						this._WorkerId = value.WorkerId;
					}
					else
					{
						this._WorkerId = default(int);
					}
					this.SendPropertyChanged("tblWorker");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblWorker")]
	public partial class tblWorker : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _WorkerId;
		
		private string _Name;
		
		private EntitySet<tblJobDetail> _tblJobDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWorkerIdChanging(int value);
    partial void OnWorkerIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public tblWorker()
		{
			this._tblJobDetails = new EntitySet<tblJobDetail>(new Action<tblJobDetail>(this.attach_tblJobDetails), new Action<tblJobDetail>(this.detach_tblJobDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkerId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int WorkerId
		{
			get
			{
				return this._WorkerId;
			}
			set
			{
				if ((this._WorkerId != value))
				{
					this.OnWorkerIdChanging(value);
					this.SendPropertyChanging();
					this._WorkerId = value;
					this.SendPropertyChanged("WorkerId");
					this.OnWorkerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblWorker_tblJobDetail", Storage="_tblJobDetails", ThisKey="WorkerId", OtherKey="WorkerId")]
		public EntitySet<tblJobDetail> tblJobDetails
		{
			get
			{
				return this._tblJobDetails;
			}
			set
			{
				this._tblJobDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblJobDetails(tblJobDetail entity)
		{
			this.SendPropertyChanging();
			entity.tblWorker = this;
		}
		
		private void detach_tblJobDetails(tblJobDetail entity)
		{
			this.SendPropertyChanging();
			entity.tblWorker = null;
		}
	}
}
#pragma warning restore 1591
